/*
* Generated on Thursday, January 14, 2021 at 2:21:08 PM Pacific Standard Time
* Operating System: Version 14.2 (Build 18B92)
* Image Source: /System/Library/Frameworks/CoreLocation.framework/CoreLocation
*/


#import <CoreLocation/CoreLocation-Structs.h>
@class NSString, CLLocation, CLHeading, NSSet;

@interface CLLocationManager : NSObject {

	id _internal;

}

@property (assign,getter=isMatchInfoEnabled,nonatomic) BOOL matchInfoEnabled; 
@property (assign,setter=_setGroundAltitudeEnabled:,getter=_isGroundAltitudeEnabled,nonatomic) BOOL _groundAltitudeEnabled; 
@property (assign,nonatomic) BOOL privateMode; 
@property (nonatomic,readonly) BOOL locationServicesAvailable; 
@property (nonatomic,readonly) BOOL locationServicesApproved; 
@property (nonatomic,readonly) double expectedGpsUpdateInterval; 
@property (assign,nonatomic) BOOL supportInfo; 
@property (nonatomic,readonly) CLClientRef internalClient; 
@property (assign,getter=isLocationServicesPreferencesDialogEnabled,nonatomic) BOOL locationServicesPreferencesDialogEnabled; 
@property (assign,getter=isDynamicAccuracyReductionEnabled,nonatomic) BOOL dynamicAccuracyReductionEnabled; 
@property (assign,nonatomic) BOOL allowsAlteredAccessoryLocations; 
@property (nonatomic,readonly) BOOL _limitsPrecision; 
@property (nonatomic,readonly) int _authorizationStatus; 
@property (getter=isAuthorizedForPreciseLocation,nonatomic,readonly) BOOL authorizedForPreciseLocation; 
@property (nonatomic,readonly) int authorizationStatus; 
@property (nonatomic,readonly) long long accuracyAuthorization; 
@property (getter=isAuthorizedForWidgetUpdates,nonatomic,readonly) BOOL authorizedForWidgetUpdates; 
@property (assign,nonatomic,__weak) id<CLLocationManagerDelegate> delegate; 
@property (nonatomic,readonly) BOOL locationServicesEnabled; 
@property (nonatomic,copy) NSString * purpose; 
@property (assign,nonatomic) long long activityType; 
@property (assign,nonatomic) double distanceFilter; 
@property (assign,nonatomic) double desiredAccuracy; 
@property (assign,nonatomic) BOOL pausesLocationUpdatesAutomatically; 
@property (assign,nonatomic) BOOL allowsBackgroundLocationUpdates; 
@property (assign,nonatomic) BOOL showsBackgroundLocationIndicator; 
@property (nonatomic,copy,readonly) CLLocation * location; 
@property (nonatomic,readonly) BOOL headingAvailable; 
@property (assign,nonatomic) double headingFilter; 
@property (assign,nonatomic) int headingOrientation; 
@property (nonatomic,copy,readonly) CLHeading * heading; 
@property (nonatomic,readonly) double maximumRegionMonitoringDistance; 
@property (nonatomic,copy,readonly) NSSet * monitoredRegions; 
@property (nonatomic,copy,readonly) NSSet * rangedRegions; 
@property (nonatomic,copy,readonly) NSSet * rangedBeaconConstraints; 
+(id)setAuthorizationPromptMapDisplayEnabled:(BOOL)arg1 ;
+(void)updateCorrectiveCompensationChoiceForOutstandingPrompt:(int)arg1 ;
+(id)sharedManager;
+(void)setLocationServicesEnabled:(BOOL)arg1 ;
+(int)authorizationStatus;
+(BOOL)headingAvailable;
+(BOOL)isRangingAvailable;
+(int)_authorizationStatusForBundleIdentifier:(id)arg1 bundle:(id)arg2 ;
+(BOOL)locationServicesEnabled:(BOOL)arg1 ;
+(BOOL)authorizationPromptMapDisplayEnabled;
+(BOOL)significantLocationChangeMonitoringAvailable;
+(BOOL)isMonitoringAvailableForClass:(Class)arg1 ;
+(BOOL)regionMonitoringAvailable;
+(BOOL)regionMonitoringEnabled;
+(BOOL)mapCorrectionAvailable;
+(BOOL)dumpLogsWithMessage:(id)arg1 ;
+(BOOL)_checkAndExerciseAuthorizationForBundleID:(id)arg1 error:(id*)arg2 ;
+(BOOL)deferredLocationUpdatesAvailable;
+(BOOL)_checkAndExerciseAuthorizationForBundle:(id)arg1 error:(id*)arg2 ;
+(BOOL)isPeerRangingAvailable;
+(id)_archivedAuthorizationDecisionsWithError:(id*)arg1 ;
+(id)_applyArchivedAuthorizationDecisions:(id)arg1 ;
+(void)setAuthorizationStatus:(BOOL)arg1 forBundleIdentifier:(id)arg2 ;
+(void)setAuthorizationStatus:(BOOL)arg1 forBundle:(id)arg2 ;
+(void)setAuthorizationStatusByType:(int)arg1 forBundleIdentifier:(id)arg2 ;
+(void)setAuthorizationStatusByType:(int)arg1 forBundle:(id)arg2 ;
+(void)setAuthorizationStatusByType:(int)arg1 withCorrectiveCompensation:(int)arg2 forBundleIdentifier:(id)arg3 ;
+(BOOL)bundleSupported:(id)arg1 ;
+(void)setAuthorizationStatusByType:(int)arg1 withCorrectiveCompensation:(int)arg2 forBundle:(id)arg3 ;
+(void)setDefaultEffectiveBundle:(id)arg1 ;
+(void)setIncidentalUseMode:(int)arg1 forBundle:(id)arg2 ;
+(void)setIncidentalUseMode:(int)arg1 forBundleIdentifier:(id)arg2 ;
+(void)getIncidentalUseMode:(int*)arg1 forBundle:(id)arg2 ;
+(void)getIncidentalUseMode:(int*)arg1 forBundleIdentifier:(id)arg2 ;
+(void)setTemporaryAuthorizationGranted:(BOOL)arg1 forBundleIdentifier:(id)arg2 ;
+(void)setDefaultEffectiveBundleIdentifier:(id)arg1 ;
+(void)setTemporaryAuthorizationGranted:(BOOL)arg1 forBundle:(id)arg2 ;
+(void)dumpDiagnosticFilesWithHandler:(/*^block*/id)arg1 ;
+(void)setBackgroundIndicatorEnabled:(BOOL)arg1 forBundleIdentifier:(id)arg2 ;
+(void)setBackgroundIndicatorEnabled:(BOOL)arg1 forBundle:(id)arg2 ;
+(BOOL)advertiseAsBeacon:(id)arg1 withPower:(id)arg2 ;
+(id)_getClientTransientAuthorizationInfoForBundleId:(id)arg1 error:(id*)arg2 ;
+(id)_getClientTransientAuthorizationInfoForBundlePath:(id)arg1 error:(id*)arg2 ;
+(id)_setClientTransientAuthorizationInfoForBundleId:(id)arg1 data:(id)arg2 ;
+(id)_setClientTransientAuthorizationInfoForBundlePath:(id)arg1 data:(id)arg2 ;
+(BOOL)shutdownDaemon;
+(unsigned long long)activeLocationServiceTypesForLocationDictionary:(id)arg1 ;
+(BOOL)isEntityAuthorizedForLocationDictionary:(id)arg1 ;
+(void)setEntityAuthorization:(unsigned long long)arg1 withCorrectiveCompensationType:(int)arg2 forLocationDictionary:(id)arg3 ;
+(void)setStatusBarIconEnabled:(BOOL)arg1 forLocationEntityClass:(unsigned long long)arg2 ;
+(BOOL)isStatusBarIconEnabledForLocationEntityClass:(unsigned long long)arg1 ;
+(unsigned long long)entityClassesForLocationDictionary:(id)arg1 ;
+(BOOL)isLocationActiveForLocationDictionary:(id)arg1 ;
+(id)dateLocationLastUsedForLocationDictionary:(id)arg1 ;
+(BOOL)hasUsedBackgroundLocationServices:(id)arg1 ;
+(unsigned long long)allowableAuthorizationForLocationDictionary:(id)arg1 ;
+(void)setEntityAuthorized:(BOOL)arg1 forLocationDictionary:(id)arg2 ;
+(BOOL)correctiveCompensationStatusForLocationDictionary:(id)arg1 ;
+(unsigned long long)incidentalUseModeForLocationDictionary:(id)arg1 ;
+(void)setEntityAuthorization:(unsigned long long)arg1 forLocationDictionary:(id)arg2 ;
+(void)setEntityAuthorization:(unsigned long long)arg1 withCorrectiveCompensation:(BOOL)arg2 forLocationDictionary:(id)arg3 ;
+(BOOL)backgroundIndicatorEnabledForLocationDictionary:(id)arg1 ;
+(void)setBackgroundIndicatorEnabled:(BOOL)arg1 forLocationDictionary:(id)arg2 ;
+(int)_authorizationStatus;
+(int)authorizationStatusForBundle:(id)arg1 ;
+(int)authorizationStatusForBundleIdentifier:(id)arg1 ;
+(BOOL)locationServicesEnabled;
+(unsigned long long)primaryEntityClassForLocationDictionary:(id)arg1 ;
+(unsigned long long)entityAuthorizationForLocationDictionary:(id)arg1 ;
-(void)stopUpdatingLocation;
-(void)startUpdatingLocation;
-(CLHeading *)heading;
-(void)dismissHeadingCalibrationDisplay;
-(void)resetApps;
-(void)setDistanceFilter:(double)arg1 ;
-(void)startUpdatingHeading;
-(void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)onClientEventBatch:(id)arg1 ;
-(id)initWithEffectiveBundle:(id)arg1 ;
-(void)stopUpdatingVehicleSpeed;
-(void)setActivityType:(long long)arg1 ;
-(void)onClientEventHeading:(id)arg1 ;
-(NSString *)purpose;
-(id)_initWithDelegate:(id)arg1 onQueue:(id)arg2 ;
-(void)setLocationServicesPreferencesDialogEnabled:(BOOL)arg1 ;
-(void)setPurpose:(NSString *)arg1 ;
-(void)requestAlwaysAuthorization;
-(BOOL)locationServicesAvailable;
-(void)stopMonitoringSignificantLocationChanges;
-(void)_setGroundAltitudeEnabled:(BOOL)arg1 ;
-(void)requestLocation;
-(long long)activityType;
-(int)headingOrientation;
-(id)init;
-(void)startRangingBeaconsInRegion:(id)arg1 ;
-(void)onClientEventAutopauseStatus:(id)arg1 ;
-(void)onClientEventRegion:(id)arg1 ;
-(void)setDesiredAccuracy:(double)arg1 ;
-(BOOL)isAuthorizedForPreciseLocation;
-(void)stopRangingBeaconsSatisfyingConstraint:(id)arg1 ;
-(void)stopUpdatingVehicleHeading;
-(id<CLLocationManagerDelegate>)delegate;
-(void)_updateVLLocalizationResult:(id)arg1 ;
-(BOOL)isAuthorizedForWidgetUpdates;
-(void)startUpdatingVehicleSpeed;
-(void)onClientEventPeerRangingError:(id)arg1 ;
-(void)stopTechStatusUpdates;
-(double)desiredAccuracy;
-(void)onClientEventRegionState:(id)arg1 ;
-(void)startUpdatingVehicleHeading;
-(void)startMonitoringForRegion:(id)arg1 ;
-(BOOL)isLocationServicesPreferencesDialogEnabled;
-(CLLocation *)location;
-(void)onClientEventRanging:(id)arg1 ;
-(void)stopUpdatingHeading;
-(void)registerAsLocationClient;
-(void)stopMonitoringForRegion:(id)arg1 ;
-(void)onClientEventAuthStatus:(id)arg1 ;
-(void)requestWhenInUseAuthorization;
-(double)expectedGpsUpdateInterval;
-(id)initWithEffectiveBundleIdentifier:(id)arg1 ;
-(void)markAsHavingReceivedLocation;
-(double)distanceFilter;
-(void)pauseLocationUpdates:(BOOL)arg1 ;
-(void)setIsActuallyAWatchKitExtension:(BOOL)arg1 ;
-(BOOL)_isFusionInfoEnabled;
-(int)authorizationStatus;
-(void)setHeadingOrientation:(int)arg1 ;
-(void)requestWhenInUseAuthorizationWithPrompt;
-(void)setMatchInfoEnabled:(BOOL)arg1 ;
-(void)_requestTemporaryFullAccuracyWithUsageDescription:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)headingAvailable;
-(void)callPlaceInferenceHandlerWithResult:(id)arg1 error:(id)arg2 ;
-(void)startRangingToPeers:(id)arg1 intervalSeconds:(unsigned long long)arg2 ;
-(void)stopRangingFromPeers:(id)arg1 ;
-(double)headingFilter;
-(NSSet *)rangedRegions;
-(void)onClientEventLocation:(id)arg1 forceMapMatching:(BOOL)arg2 type:(id)arg3 ;
-(void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)onDidBecomeActive:(id)arg1 ;
-(void)_updateVIOEstimation:(id)arg1 ;
-(void)startMonitoringVisits;
-(void)requestRangingToPeers:(id)arg1 timeoutSeconds:(double)arg2 ;
-(BOOL)_limitsPrecision;
-(void)onClientEventHeadingCalibration:(id)arg1 ;
-(void)_requestTemporaryFullAccuracyWithUsageDescription:(id)arg1 ;
-(void)setDelegate:(id<CLLocationManagerDelegate>)arg1 ;
-(void)setAllowsAlteredAccessoryLocations:(BOOL)arg1 ;
-(double)maximumRegionMonitoringDistance;
-(BOOL)supportInfo;
-(void)startTechStatusUpdates;
-(void)onClientEventPlaceInferenceError:(id)arg1 ;
-(void)setShowsBackgroundLocationIndicator:(BOOL)arg1 ;
-(void)onClientEventPeerRanging:(id)arg1 ;
-(void)startMonitoringForRegion:(id)arg1 desiredAccuracy:(double)arg2 ;
-(void)startRangingBeaconsSatisfyingConstraint:(id)arg1 ;
-(void)disallowDeferredLocationUpdates;
-(id)initWithEffectiveBundleIdentifier:(id)arg1 bundle:(id)arg2 delegate:(id)arg3 silo:(id)arg4 ;
-(void)stopMonitoringVisits;
-(NSSet *)rangedBeaconConstraints;
-(void)onClientEventPeerRangingRequestProcessed:(id)arg1 ;
-(void)startUpdatingLocationWithPrompt;
-(void)startRangingFromPeers:(id)arg1 ;
-(BOOL)isMatchInfoEnabled;
-(void)_fetchContinuousPlaceInferencesWithFidelityPolicy:(unsigned long long)arg1 handler:(/*^block*/id)arg2 ;
-(id)_groundAltitudeAtLocation:(id)arg1 ;
-(void)startMonitoringSignificantLocationChanges;
-(void)allowDeferredLocationUpdatesUntilTraveled:(double)arg1 timeout:(double)arg2 ;
-(BOOL)allowsBackgroundLocationUpdates;
-(void)setSupportInfo:(BOOL)arg1 ;
-(void)_stopFetchingContinuousPlaceInferences;
-(void)onClientEventVehicleSpeed:(id)arg1 ;
-(void)setHeadingFilter:(double)arg1 ;
-(BOOL)locationServicesApproved;
-(void)onClientEventVehicleHeading:(id)arg1 ;
-(BOOL)pausesLocationUpdatesAutomatically;
-(void)respondToRangingFromPeers:(id)arg1 timeoutSeconds:(double)arg2 ;
-(void)onClientEventRegionResponseDelayed:(id)arg1 ;
-(void)onClientEventRegionSetupCompleted:(id)arg1 ;
-(void)setDynamicAccuracyReductionEnabled:(BOOL)arg1 ;
-(void)_startLeechingVisits;
-(int)_authorizationStatus;
-(void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:(id)arg1 ;
-(NSSet *)monitoredRegions;
-(void)onClientEventError:(id)arg1 ;
-(id)_startPlaceInferencesCommonLogic:(unsigned long long)arg1 handler:(/*^block*/id)arg2 ;
-(void)requestStateForRegion:(id)arg1 ;
-(void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:(id)arg1 ;
-(void)setAllowsBackgroundLocationUpdates:(BOOL)arg1 ;
-(void)onClientEventNoLocationWatchdog:(id)arg1 ;
-(void)onClientEvent:(int)arg1 supportInfo:(id)arg2 ;
-(BOOL)isDynamicAccuracyReductionEnabled;
-(void)onClientEventRegionError:(id)arg1 ;
-(id)initWithEffectiveBundle:(id)arg1 limitingBundleIdentifier:(id)arg2 delegate:(id)arg3 onQueue:(id)arg4 ;
-(void)onRangingRequestTimeout;
-(void)onClientEventSignificantLocationVisit:(id)arg1 ;
-(void)onClientEventRangingError:(id)arg1 ;
-(id)technologiesInUse;
-(void)startAppStatusUpdates;
-(id)initWithEffectiveBundleIdentifier:(id)arg1 delegate:(id)arg2 onQueue:(id)arg3 ;
-(void)_fetchPlaceInferencesWithFidelityPolicy:(unsigned long long)arg1 handler:(/*^block*/id)arg2 ;
-(id)appsUsingLocation;
-(id)initWithEffectiveBundle:(id)arg1 delegate:(id)arg2 onQueue:(id)arg3 ;
-(void)setPrivateMode:(BOOL)arg1 ;
-(void)_updateARSessionState:(unsigned long long)arg1 ;
-(BOOL)locationServicesEnabled;
-(id)appsUsingLocationWithDetails;
-(id)initWithIdentifier:(id)arg1 ;
-(BOOL)allowsAlteredAccessoryLocations;
-(void)onClientEventPlaceInferenceResult:(id)arg1 ;
-(void)_startMonitoringSignificantLocationChangesOfDistance:(double)arg1 withPowerBudget:(int)arg2 ;
-(long long)accuracyAuthorization;
-(void)setPausesLocationUpdatesAutomatically:(BOOL)arg1 ;
-(BOOL)showsBackgroundLocationIndicator;
-(BOOL)_isGroundAltitudeEnabled;
-(void)stopRangingBeaconsInRegion:(id)arg1 ;
-(void)onLocationRequestTimeout;
-(void)onClientEventLocationUnavailable:(id)arg1 ;
-(CLClientRef)internalClient;
-(void)resumeLocationUpdates;
-(void)stopAppStatusUpdates;
-(void)dealloc;
-(void)_setFusionInfoEnabled:(BOOL)arg1 ;
-(void)stopRangingToPeers:(id)arg1 ;
-(void)onClientEventInterrupted:(id)arg1 ;
-(BOOL)privateMode;
@end

