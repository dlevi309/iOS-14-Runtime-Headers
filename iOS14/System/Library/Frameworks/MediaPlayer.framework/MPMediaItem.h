/*
* Generated on Thursday, January 14, 2021 at 2:21:16 PM Pacific Standard Time
* Operating System: Version 14.2 (Build 18B92)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
*/

#import <MediaPlayer/MPMediaEntity.h>

@class NSArray, NSDate, NSString, MPMediaItemArtwork, NSURL;

@interface MPMediaItem : MPMediaEntity

@property (nonatomic,readonly) NSArray * chapters; 
@property (nonatomic,copy) NSDate * lastPlayedDate; 
@property (nonatomic,readonly) BOOL isRental; 
@property (nonatomic,readonly) BOOL isITunesU; 
@property (nonatomic,readonly) double startTime; 
@property (nonatomic,readonly) double stopTime; 
@property (nonatomic,readonly) unsigned long long year; 
@property (assign,nonatomic) unsigned long long skipCountSinceSync; 
@property (assign,nonatomic) unsigned long long playCountSinceSync; 
@property (nonatomic,copy) NSDate * lastSkippedDate; 
@property (nonatomic,copy) NSDate * dateAccessed; 
@property (assign,nonatomic) BOOL hasBeenPlayed; 
@property (nonatomic,readonly) BOOL rememberBookmarkTime; 
@property (nonatomic,readonly) NSDate * dateDownloaded; 
@property (nonatomic,readonly) double effectiveStopTime; 
@property (nonatomic,readonly) NSString * effectiveAlbumArtist; 
@property (nonatomic,readonly) BOOL isUsableAsRepresentativeItem; 
@property (nonatomic,readonly) unsigned long long persistentID; 
@property (nonatomic,readonly) unsigned long long mediaType; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * albumTitle; 
@property (nonatomic,readonly) unsigned long long albumPersistentID; 
@property (nonatomic,readonly) NSString * artist; 
@property (nonatomic,readonly) unsigned long long artistPersistentID; 
@property (nonatomic,readonly) NSString * albumArtist; 
@property (nonatomic,readonly) unsigned long long albumArtistPersistentID; 
@property (nonatomic,readonly) NSString * genre; 
@property (nonatomic,readonly) unsigned long long genrePersistentID; 
@property (nonatomic,readonly) NSString * composer; 
@property (nonatomic,readonly) unsigned long long composerPersistentID; 
@property (nonatomic,readonly) double playbackDuration; 
@property (nonatomic,readonly) unsigned long long albumTrackNumber; 
@property (nonatomic,readonly) unsigned long long albumTrackCount; 
@property (nonatomic,readonly) unsigned long long discNumber; 
@property (nonatomic,readonly) unsigned long long discCount; 
@property (nonatomic,readonly) MPMediaItemArtwork * artwork; 
@property (getter=isExplicitItem,nonatomic,readonly) BOOL explicitItem; 
@property (nonatomic,readonly) NSString * lyrics; 
@property (getter=isCompilation,nonatomic,readonly) BOOL compilation; 
@property (nonatomic,readonly) NSDate * releaseDate; 
@property (nonatomic,readonly) unsigned long long beatsPerMinute; 
@property (nonatomic,readonly) NSString * comments; 
@property (nonatomic,readonly) NSURL * assetURL; 
@property (getter=isCloudItem,nonatomic,readonly) BOOL cloudItem; 
@property (getter=hasProtectedAsset,nonatomic,readonly) BOOL protectedAsset; 
@property (nonatomic,readonly) NSString * podcastTitle; 
@property (nonatomic,readonly) unsigned long long podcastPersistentID; 
@property (nonatomic,readonly) unsigned long long playCount; 
@property (nonatomic,readonly) unsigned long long skipCount; 
@property (nonatomic,readonly) unsigned long long rating; 
@property (nonatomic,readonly) NSString * userGrouping; 
@property (nonatomic,readonly) double bookmarkTime; 
@property (nonatomic,readonly) NSDate * dateAdded; 
@property (nonatomic,readonly) NSString * playbackStoreID; 
+(BOOL)supportsSecureCoding;
+(BOOL)canFilterByProperty:(id)arg1 ;
+(void)_createFilterableDictionary;
+(id)itemFromSong:(id)arg1 ;
+(BOOL)_isValidItemProperty:(id)arg1 ;
+(id)itemFromModelObject:(id)arg1 ;
+(id)persistentIDPropertyForGroupingType:(long long)arg1 ;
+(id)ULIDPropertyForGroupingType:(long long)arg1 ;
+(id)titlePropertyForGroupingType:(long long)arg1 ;
+(id)fallbackTitlePropertyForGroupingType:(long long)arg1 ;
+(id)MPSD_mediaItemPropertiesForDownloadability;
+(id)artworkCatalogCacheProperties;
+(id)screenshotArtworkCatalogCacheProperties;
+(id)dynamicProperties;
-(unsigned long long)rating;
-(NSString *)composer;
-(BOOL)isExplicitItem;
-(double)playbackDuration;
-(NSString *)genre;
-(NSString *)lyrics;
-(unsigned long long)playCount;
-(unsigned long long)year;
-(NSDate *)releaseDate;
-(void)setPlayCount:(unsigned long long)arg1 ;
-(double)stopTime;
-(NSString *)artist;
-(unsigned long long)mediaType;
-(NSArray *)chapters;
-(BOOL)isRental;
-(NSString *)comments;
-(BOOL)existsInLibrary;
-(id)initWithPersistentID:(unsigned long long)arg1 ;
-(id)initWithMultiverseIdentifier:(id)arg1 library:(id)arg2 ;
-(id)multiverseIdentifier;
-(NSURL *)assetURL;
-(void)encodeWithCoder:(id)arg1 ;
-(id)_bestStoreURL;
-(NSDate *)dateAccessed;
-(unsigned long long)beatsPerMinute;
-(NSString *)podcastTitle;
-(BOOL)isCloudItem;
-(id)valuesForProperties:(id)arg1 ;
-(BOOL)didSkipWithPlayedToTime:(double)arg1 ;
-(void)markNominalAmountHasBeenPlayed;
-(void)noteWasPlayedToTime:(double)arg1 skipped:(BOOL)arg2 ;
-(void)incrementSkipCount;
-(void)incrementPlayCountForPlayingToEnd;
-(void)setDateAccessed:(NSDate *)arg1 ;
-(BOOL)incrementPlayCountForStopTime:(double)arg1 ;
-(void)updateDateAccessedToCurrentDateWithWriteCompletionBlock:(/*^block*/id)arg1 ;
-(double)nominalHasBeenPlayedThreshold;
-(void)populateLocationPropertiesWithPath:(id)arg1 ;
-(NSString *)effectiveAlbumArtist;
-(void)populateLocationPropertiesWithPath:(id)arg1 assetProtectionType:(long long)arg2 ;
-(BOOL)hasProtectedAsset;
-(double)effectiveStopTime;
-(void)populateLocationPropertiesWithPath:(id)arg1 assetProtectionType:(long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)clearLocationProperties;
-(unsigned long long)podcastPersistentID;
-(id)predicateForProperty:(id)arg1 ;
-(unsigned long long)playCountSinceSync;
-(void)setPlayCountSinceSync:(unsigned long long)arg1 ;
-(NSDate *)lastPlayedDate;
-(void)setLastPlayedDate:(NSDate *)arg1 ;
-(void)setSkipCount:(unsigned long long)arg1 ;
-(unsigned long long)skipCountSinceSync;
-(void)setSkipCountSinceSync:(unsigned long long)arg1 ;
-(NSDate *)lastSkippedDate;
-(void)setLastSkippedDate:(NSDate *)arg1 ;
-(BOOL)hasBeenPlayed;
-(void)setHasBeenPlayed:(BOOL)arg1 ;
-(NSString *)playbackStoreID;
-(BOOL)rememberBookmarkTime;
-(NSString *)userGrouping;
-(id)chaptersOfType:(long long)arg1 ;
-(id)chapterOfType:(long long)arg1 atIndex:(unsigned long long)arg2 ;
-(id)chapterOfType:(long long)arg1 atTime:(double)arg2 ;
-(unsigned long long)countOfChaptersOfType:(long long)arg1 ;
-(void)gaplessHeuristicInfo:(unsigned*)arg1 durationInSamples:(unsigned long long*)arg2 lastPacketsResync:(unsigned long long*)arg3 encodingDelay:(unsigned*)arg4 encodingDrain:(unsigned*)arg5 ;
-(BOOL)isUsableAsRepresentativeItem;
-(NSDate *)dateDownloaded;
-(id)_directStoreURL;
-(id)_libraryLinkArtist;
-(id)_libraryLinkKind;
-(id)_libraryLinkPlaylistName;
-(id)_libraryLinkURL;
-(void)setRating:(unsigned long long)arg1 ;
-(unsigned long long)discCount;
-(double)bookmarkTime;
-(NSString *)albumArtist;
-(void)didReceiveMemoryWarning;
-(unsigned long long)albumTrackNumber;
-(unsigned long long)albumTrackCount;
-(unsigned long long)discNumber;
-(unsigned long long)albumPersistentID;
-(unsigned long long)albumArtistPersistentID;
-(unsigned long long)artistPersistentID;
-(unsigned long long)genrePersistentID;
-(unsigned long long)composerPersistentID;
-(BOOL)MPSD_isDownloadable;
-(BOOL)MPSD_isDownloadInProgress;
-(MPMediaItemArtwork *)artwork;
-(id)representativeItem;
-(BOOL)isCompilation;
-(NSString *)albumTitle;
-(unsigned long long)hash;
-(id)initWithCoder:(id)arg1 ;
-(id)valueForProperty:(id)arg1 ;
-(id)artworkCatalog;
-(id)screenshotArtworkCatalog;
-(BOOL)isITunesU;
-(unsigned long long)skipCount;
-(id)_artworkCatalogWithArtworkType:(long long)arg1 ;
-(void)incrementPlayCount;
-(NSDate *)dateAdded;
-(double)startTime;
-(NSString *)title;
-(BOOL)isEqual:(id)arg1 ;
@end

