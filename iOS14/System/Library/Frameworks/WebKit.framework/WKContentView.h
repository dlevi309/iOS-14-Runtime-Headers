/*
* Generated on Thursday, January 14, 2021 at 2:21:57 PM Pacific Standard Time
* Operating System: Version 14.2 (Build 18B92)
* Image Source: /System/Library/Frameworks/WebKit.framework/WebKit
*/

#import <WebKit/WebKit-Structs.h>
#import <WebKit/WKApplicationStateTrackingView.h>
#import <UIKit/UIIndirectScribbleInteractionDelegate.h>
#import <libobjc.A.dylib/_WKWebViewPrintProvider.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UITextAutoscrolling.h>
#import <UIKit/UITextInputMultiDocument.h>
#import <UIKit/UITextInputPrivate.h>
#import <UIKit/UIWebFormAccessoryDelegate.h>
#import <UIKit/UIWebTouchEventsGestureRecognizerDelegate.h>
#import <UIKit/UIWKInteractionViewProtocol.h>
#import <libobjc.A.dylib/WKActionSheetAssistantDelegate.h>
#import <libobjc.A.dylib/WKFileUploadPanelDelegate.h>
#import <libobjc.A.dylib/WKKeyboardScrollViewAnimatorDelegate.h>
#import <libobjc.A.dylib/WKDeferringGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/WKShareSheetDelegate.h>
#import <UIKit/UIDragInteractionDelegate.h>
#import <UIKit/UIDropInteractionDelegate.h>
#import <libobjc.A.dylib/WKTouchActionGestureRecognizerDelegate.h>
#import <UIKit/UIContextMenuInteractionDelegate.h>
#import <UIKit/UIPreviewItemDelegate.h>

@class UITextInteractionAssistant, RTIInputSystemSourceSession, NSString, UIWebFormAccessory, UITextInputAssistantItem, UIView, NSArray, UITextRange, NSDictionary, UITextPosition, UITextInputPasswordRules, NSIndexSet, UIColor, UIImage, UIInputContextHistory, WKDateTimeInputControl, WKBrowsingContextController;

@interface WKContentView : WKApplicationStateTrackingView <UIIndirectScribbleInteractionDelegate, _WKWebViewPrintProvider, UIGestureRecognizerDelegate, UITextAutoscrolling, UITextInputMultiDocument, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWebTouchEventsGestureRecognizerDelegate, UIWKInteractionViewProtocol, WKActionSheetAssistantDelegate, WKFileUploadPanelDelegate, WKKeyboardScrollViewAnimatorDelegate, WKDeferringGestureRecognizerDelegate, WKShareSheetDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, WKTouchActionGestureRecognizerDelegate, UIContextMenuInteractionDelegate, UIPreviewItemDelegate> {

	RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> >* _page;
	WeakObjCPtr<WKWebView> _webView;
	RetainPtr<WKDeferringGestureRecognizer>* _deferringGestureRecognizerForImmediatelyResettableGestures;
	RetainPtr<WKDeferringGestureRecognizer>* _deferringGestureRecognizerForDelayedResettableGestures;
	RetainPtr<WKDeferringGestureRecognizer>* _deferringGestureRecognizerForSyntheticTapGestures;
	RetainPtr<UIWebTouchEventsGestureRecognizer>* _touchEventGestureRecognizer;
	BOOL _touchEventsCanPreventNativeGestures;
	BOOL _preventsPanningInXAxis;
	BOOL _preventsPanningInYAxis;
	RetainPtr<WKSyntheticTapGestureRecognizer>* _singleTapGestureRecognizer;
	RetainPtr<WKHighlightLongPressGestureRecognizer>* _highlightLongPressGestureRecognizer;
	RetainPtr<UILongPressGestureRecognizer>* _longPressGestureRecognizer;
	RetainPtr<WKSyntheticTapGestureRecognizer>* _doubleTapGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _nonBlockingDoubleTapGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _doubleTapGestureRecognizerForDoubleClick;
	RetainPtr<UITapGestureRecognizer>* _twoFingerDoubleTapGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _twoFingerSingleTapGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _stylusSingleTapGestureRecognizer;
	RetainPtr<WKInspectorNodeSearchGestureRecognizer>* _inspectorNodeSearchGestureRecognizer;
	RetainPtr<WKTouchActionGestureRecognizer>* _touchActionGestureRecognizer;
	RetainPtr<UISwipeGestureRecognizer>* _touchActionLeftSwipeGestureRecognizer;
	RetainPtr<UISwipeGestureRecognizer>* _touchActionRightSwipeGestureRecognizer;
	RetainPtr<UISwipeGestureRecognizer>* _touchActionUpSwipeGestureRecognizer;
	RetainPtr<UISwipeGestureRecognizer>* _touchActionDownSwipeGestureRecognizer;
	RetainPtr<WKMouseGestureRecognizer>* _mouseGestureRecognizer;
	unsigned char _mouseEventPolicy;
	RetainPtr<_UICursorInteraction>* _cursorInteraction;
	BOOL _hasOutstandingCursorInteractionRequest;
	Optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (_UICursorRegion *)> > > _deferredCursorInteractionRequest;
	RetainPtr<UIWKTextInteractionAssistant>* _textInteractionAssistant;
	OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;
	RetainPtr<UITextInputTraits>* _traits;
	RetainPtr<UIWebFormAccessory>* _formAccessoryView;
	RetainPtr<_UIHighlightView>* _highlightView;
	RetainPtr<UIView>* _interactionViewsContainerView;
	RetainPtr<UIView>* _contextMenuHintContainerView;
	RetainPtr<UIView>* _dragPreviewContainerView;
	RetainPtr<UIView>* _dropPreviewContainerView;
	RetainPtr<NSString>* _markedText;
	RetainPtr<WKActionSheetAssistant>* _actionSheetAssistant;
	RetainPtr<WKAirPlayRoutePicker>* _airPlayRoutePicker;
	RetainPtr<WKFormInputSession>* _formInputSession;
	RetainPtr<WKFileUploadPanel>* _fileUploadPanel;
	FrameInfoData* _frameInfoForFileUploadPanel;
	RetainPtr<WKShareSheet>* _shareSheet;
	RetainPtr<UIGestureRecognizer>* _previewGestureRecognizer;
	RetainPtr<UIGestureRecognizer>* _previewSecondaryGestureRecognizer;
	Vector<bool, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>* _focusStateStack;
	RetainPtr<UIContextMenuInteraction>* _contextMenuInteraction;
	RetainPtr<WKContextMenuElementInfo>* _contextMenuElementInfo;
	BOOL _showLinkPreviews;
	RetainPtr<UIViewController>* _contextMenuLegacyPreviewController;
	RetainPtr<UIMenu>* _contextMenuLegacyMenu;
	BOOL _contextMenuHasRequestedLegacyData;
	BOOL _contextMenuActionProviderDelegateNeedsOverride;
	RetainPtr<UIPreviewItemController>* _previewItemController;
	RetainPtr<UITargetedPreview>* _contextMenuInteractionTargetedPreview;
	unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController> >* _smartMagnificationController;
	WeakObjCPtr<id<UITextInputDelegate> > _inputDelegate;
	unsigned long long _latestTapID;
	TapHighlightInformation* _tapHighlightInformation;
	WebAutocorrectionContext* _lastAutocorrectionContext;
	WKAutoCorrectionData* _autocorrectionData;
	InteractionInformationAtPosition* _positionInformation;
	FocusedElementInformation* _focusedElementInformation;
	RetainPtr<NSObject<WKFormPeripheral> >* _inputPeripheral;
	BlockPtr<void (WebEvent *, bool)> _keyWebEventHandler;
	CGPoint _lastInteractionLocation;
	MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;
	WKSelectionDrawingInfo* _lastSelectionDrawingInfo;
	RetainPtr<WKTextRange>* _cachedSelectedTextRange;
	Optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;
	unsigned long long _positionInformationCallbackDepth;
	Vector<WTF::Optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>* _pendingPositionInformationHandlers;
	unique_ptr<WebKit::InputViewUpdateDeferrer, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> >* _inputViewUpdateDeferrer;
	RetainPtr<WKKeyboardScrollViewAnimator>* _keyboardScrollingAnimator;
	RetainPtr<UIView<WKFormControl> >* _dataListTextSuggestionsInputView;
	RetainPtr<NSArray<UITextSuggestion *> >* _dataListTextSuggestions;
	BOOL _isEditable;
	BOOL _showingTextStyleOptions;
	BOOL _hasValidPositionInformation;
	BOOL _isTapHighlightIDValid;
	BOOL _potentialTapInProgress;
	BOOL _isDoubleTapPending;
	BOOL _longPressCanClick;
	BOOL _hasTapHighlightForPotentialTap;
	BOOL _selectionNeedsUpdate;
	BOOL _shouldRestoreSelection;
	BOOL _usingGestureForSelection;
	BOOL _inspectorNodeSearchEnabled;
	BOOL _isChangingFocusUsingAccessoryTab;
	BOOL _didAccessoryTabInitiateFocus;
	BOOL _isExpectingFastSingleTapCommit;
	BOOL _showDebugTapHighlightsForFastClicking;
	BOOL _textInteractionDidChangeFocusedElement;
	BOOL _textInteractionIsHappening;
	BOOL _treatAsContentEditableUntilNextEditorStateUpdate;
	BOOL _isWaitingOnPositionInformation;
	int m_commitPotentialTapPointerId;
	BOOL _keyboardDidRequestDismissal;
	BOOL _candidateViewNeedsUpdate;
	BOOL _seenHardwareKeyDownInNonEditableElement;
	BOOL _becomingFirstResponder;
	BOOL _resigningFirstResponder;
	BOOL _needsDeferredEndScrollingSelectionUpdate;
	BOOL _isChangingFocus;
	BOOL _isFocusingElementWithKeyboard;
	BOOL _isBlurringFocusedElement;
	BOOL _isRelinquishingFirstResponderToFocusedElement;
	BOOL _focusRequiresStrongPasswordAssistance;
	BOOL _waitingForEditDragSnapshot;
	long long _dropAnimationCount;
	BOOL _hasSetUpInteractions;
	unsigned long long _ignoreSelectionCommandFadeCount;
	long long _suppressNonEditableSingleTapTextInteractionCount;
	CompletionHandler<void (WebCore::DOMPasteAccessResponse)>* _domPasteRequestHandler;
	BlockPtr<void (UIWKAutocorrectionContext *)> _pendingAutocorrectionContextHandler;
	RetainPtr<NSDictionary>* _additionalContextForStrongPasswordAssistance;
	Optional<int> _lastInsertedCharacterToOverrideCharacterBeforeSelection;
	DragDropInteractionState* _dragDropInteractionState;
	RetainPtr<UIDragInteraction>* _dragInteraction;
	RetainPtr<UIDropInteraction>* _dropInteraction;
	BOOL _shouldRestoreCalloutBarAfterDrop;
	RetainPtr<UIView>* _visibleContentViewSnapshot;
	RetainPtr<UIView>* _unselectedContentSnapshot;
	RetainPtr<_UITextDragCaretView>* _editDropCaretView;
	BlockPtr<void ()> _actionToPerformAfterReceivingEditDragSnapshot;
	Vector<WTF::BlockPtr<void ()>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>* _actionsToPerformAfterResettingSingleTapGestureRecognizer;
	unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl> >* _pageClient;
	RetainPtr<WKBrowsingContextController>* _browsingContextController;
	RetainPtr<UIView>* _rootContentView;
	RetainPtr<UIView>* _fixedClippingView;
	RetainPtr<WKInspectorIndicationView>* _inspectorIndicationView;
	RetainPtr<WKInspectorHighlightView>* _inspectorHighlightView;
	RetainPtr<_UILayerHostView>* _visibilityPropagationView;
	RetainPtr<_UILayerHostView>* _visibilityPropagationViewForGPUProcess;
	HistoricalVelocityData _historicalKinematicData;
	RetainPtr<NSUndoManager>* _undoManager;
	RetainPtr<WKQuirkyNSUndoManager>* _quirkyUndoManager;
	BOOL _isPrintingToPDF;
	RetainPtr<CGPDFDocument *>* _printedDocument;
	BOOL _sizeChangedSinceLastVisibleContentRectUpdate;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) CGPDFDocumentRef _wk_printedDocument; 
@property (nonatomic,readonly) CGPoint lastInteractionLocation; 
@property (nonatomic,readonly) BOOL isEditable; 
@property (nonatomic,readonly) BOOL shouldHideSelectionWhenScrolling; 
@property (nonatomic,readonly) BOOL shouldIgnoreKeyboardWillHideNotification; 
@property (nonatomic,readonly) const InteractionInformationAtPosition* positionInformation; 
@property (nonatomic,readonly) const WKAutoCorrectionData* autocorrectionData; 
@property (nonatomic,readonly) const FocusedElementInformation* focusedElementInformation; 
@property (nonatomic,readonly) UIWebFormAccessory * formAccessoryView; 
@property (nonatomic,readonly) UITextInputAssistantItem * inputAssistantItemForWebView; 
@property (nonatomic,readonly) UIView * inputViewForWebView; 
@property (nonatomic,readonly) UIView * inputAccessoryViewForWebView; 
@property (nonatomic,readonly) BOOL preventsPanningInXAxis; 
@property (nonatomic,readonly) BOOL preventsPanningInYAxis; 
@property (nonatomic,retain) UIView*<WKFormControl> dataListTextSuggestionsInputView; 
@property (nonatomic,retain) NSArray * dataListTextSuggestions; 
@property (nonatomic,readonly) BOOL _shouldUseContextMenus; 
@property (nonatomic,readonly) BOOL _shouldAvoidResizingWhenInputViewBoundsChange; 
@property (nonatomic,readonly) BOOL _shouldAvoidScrollingWhenFocusedContentIsVisible; 
@property (nonatomic,readonly) BOOL _shouldUseLegacySelectPopoverDismissalBehavior; 
@property (nonatomic,readonly) UITextInteractionAssistant * interactionAssistant; 
@property (assign,nonatomic) long long selectionGranularity; 
@property (nonatomic,readonly) long long cursorBehavior; 
@property (nonatomic,readonly) id<UITextInputSuggestionDelegate> textInputSuggestionDelegate; 
@property (assign,nonatomic) long long _textInputSource; 
@property (nonatomic,readonly) RTIInputSystemSourceSession * _rtiSourceSession; 
@property (nonatomic,readonly) BOOL supportsImagePaste; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic,__weak) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
@property (nonatomic,readonly) id insertDictationResultPlaceholder; 
@property (nonatomic,readonly) BOOL hasText; 
@property (assign,nonatomic) long long autocapitalizationType; 
@property (assign,nonatomic) long long autocorrectionType; 
@property (assign,nonatomic) long long spellCheckingType; 
@property (assign,nonatomic) long long smartQuotesType; 
@property (assign,nonatomic) long long smartDashesType; 
@property (assign,nonatomic) long long smartInsertDeleteType; 
@property (assign,nonatomic) long long keyboardType; 
@property (assign,nonatomic) long long keyboardAppearance; 
@property (assign,nonatomic) long long returnKeyType; 
@property (assign,nonatomic) BOOL enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) BOOL secureTextEntry; 
@property (nonatomic,copy) NSString * textContentType; 
@property (nonatomic,copy) UITextInputPasswordRules * passwordRules; 
@property (nonatomic,copy) NSString * recentInputIdentifier; 
@property (assign,nonatomic) NSRange validTextRange; 
@property (nonatomic,copy) NSIndexSet * PINEntrySeparatorIndexes; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (nonatomic,retain) UIColor * underlineColorForTextAlternatives; 
@property (nonatomic,retain) UIColor * underlineColorForSpelling; 
@property (assign,nonatomic) unsigned long long insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) BOOL isSingleLineDocument; 
@property (assign,nonatomic) BOOL contentsIsSingleValue; 
@property (assign,nonatomic) BOOL hasDefaultContents; 
@property (assign,nonatomic) BOOL acceptsPayloads; 
@property (assign,nonatomic) BOOL acceptsEmoji; 
@property (assign,nonatomic) BOOL acceptsInitialEmojiKeyboard; 
@property (assign,nonatomic) BOOL acceptsDictationSearchResults; 
@property (assign,nonatomic) BOOL useAutomaticEndpointing; 
@property (assign,nonatomic) BOOL showDictationButton; 
@property (assign,nonatomic) BOOL forceEnableDictation; 
@property (assign,nonatomic) BOOL forceDisableDictation; 
@property (assign,nonatomic) BOOL forceDefaultDictationInfo; 
@property (assign,nonatomic) long long forceDictationKeyboardType; 
@property (assign,nonatomic) BOOL preferOnlineDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) BOOL returnKeyGoesToNextResponder; 
@property (assign,nonatomic) BOOL acceptsFloatingKeyboard; 
@property (assign,nonatomic) BOOL forceFloatingKeyboard; 
@property (assign,nonatomic) UIEdgeInsets floatingKeyboardEdgeInsets; 
@property (assign,nonatomic) BOOL acceptsSplitKeyboard; 
@property (assign,nonatomic) BOOL displaySecureTextUsingPlainText; 
@property (assign,nonatomic) BOOL displaySecureEditsUsingPlainText; 
@property (assign,nonatomic) BOOL learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) BOOL suppressReturnKeyStyling; 
@property (assign,nonatomic) BOOL useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) BOOL deferBecomingResponder; 
@property (assign,nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (nonatomic,retain) UIInputContextHistory * inputContextHistory; 
@property (assign,nonatomic) BOOL disableInputBars; 
@property (assign,nonatomic) BOOL isCarPlayIdiom; 
@property (assign,nonatomic) long long textScriptType; 
@property (assign,nonatomic) BOOL loadKeyboardsForSiriLanguage; 
@property (assign,nonatomic) BOOL disablePrediction; 
@property (assign,nonatomic) BOOL hidePrediction; 
@property (assign,getter=isDevicePasscodeEntry,nonatomic) BOOL devicePasscodeEntry; 
@property (nonatomic,readonly) NSString * textContentTypeForTesting; 
@property (nonatomic,readonly) NSString * selectFormPopoverTitle; 
@property (nonatomic,readonly) NSString * formInputLabel; 
@property (nonatomic,readonly) WKDateTimeInputControl * dateTimeInputControl; 
@property (nonatomic,readonly) WKBrowsingContextController * browsingContextController; 
@property (nonatomic,readonly) WebPageProxy* page; 
@property (nonatomic,readonly) BOOL isFocusingElement; 
@property (assign,getter=isShowingInspectorIndication,nonatomic) BOOL showingInspectorIndication; 
@property (getter=isResigningFirstResponder,nonatomic,readonly) BOOL resigningFirstResponder;                  //@synthesize resigningFirstResponder=_resigningFirstResponder - In the implementation block
@property (assign,nonatomic) BOOL sizeChangedSinceLastVisibleContentRectUpdate;                                //@synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate - In the implementation block
@property (nonatomic,readonly) long long interfaceOrientation; 
+(Class)_fileUploadPanelClass;
-(BOOL)requiresKeyEvents;
-(void)_nonBlockingDoubleTapRecognized:(id)arg1 ;
-(BOOL)hasText;
-(void)_updateAccessory;
-(BOOL)gestureRecognizerMayPinchToZoomWebView:(id)arg1 ;
-(void)requestDocumentContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(void)setUpScribbleInteraction;
-(void)toggleBoldfaceForWebView:(id)arg1 ;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(id)webView;
-(void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(BOOL)arg2 ;
-(void)_deleteToEndOfLine;
-(BOOL)isEditable;
-(void)unmarkText;
-(void)_selectionChanged;
-(id)createTargetedContextMenuHintForActionSheetAssistant:(id)arg1 ;
-(NSRange)selectionRange;
-(void)updateTextSuggestionsForInputDelegate;
-(void)_showTapHighlight;
-(id)_moveToStartOfParagraph:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)increaseSize:(id)arg1 ;
-(BOOL)setIsEditable:(BOOL)arg1 ;
-(void)_endEditing;
-(void)toggleItalicsForWebView:(id)arg1 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(double)dragLiftDelay;
-(UIView *)inputAccessoryViewForWebView;
-(BOOL)_selectionAtDocumentStart;
-(id)unscaledView;
-(void)_windowDidMoveToScreenNotification:(id)arg1 ;
-(void)_singleTapDidReset:(id)arg1 ;
-(id)scribbleInteraction;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(double)_contentZoomScale;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(UIColor *)insertionPointColor;
-(NSString *)selectFormPopoverTitle;
-(void)_webViewDestroyed;
-(void)didFinishScrolling;
-(UITextPosition *)endOfDocument;
-(id)selectedText;
-(void)accessoryClear;
-(void)moveByOffset:(long long)arg1 ;
-(BOOL)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1 ;
-(void)_processWillSwap;
-(void)_willHideMenu:(id)arg1 ;
-(void)actionSheetAssistantDidStopInteraction:(id)arg1 ;
-(UITextInteractionAssistant *)interactionAssistant;
-(void)replaceText:(id)arg1 withText:(id)arg2 ;
-(void)copy:(id)arg1 ;
-(NSDictionary *)markedTextStyle;
-(double)inverseScale;
-(UITextRange *)markedTextRange;
-(void)selectAll;
-(void)_elementDidBlur;
-(void)setUpInteraction;
-(void)_setMouseEventPolicy:(unsigned char)arg1 ;
-(void)_showInspectorHighlight:(const Highlight*)arg1 ;
-(void)setShowingInspectorIndication:(BOOL)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(UIColor *)selectionBarColor;
-(void)pasteForWebView:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(BOOL)requiresAccessoryView;
-(BOOL)_isHandlingWriting;
-(void)_configureMouseGestureRecognizer;
-(void)updateSelectionWithExtentPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(UITextRange *)selectedTextRange;
-(void)_deleteForwardAndNotify:(BOOL)arg1 ;
-(BOOL)supportsImagePaste;
-(void)handleKeyWebEvent:(id)arg1 ;
-(void)insertTextSuggestion:(id)arg1 ;
-(id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2 ;
-(id<UITextInputDelegate>)inputDelegate;
-(void)_toggleStrikeThrough:(id)arg1 ;
-(DragData*)dragDataForDropSession:(id)arg1 dragDestinationAction:(unsigned long long)arg2 ;
-(BOOL)shouldHideSelectionWhenScrolling;
-(id)selectionRectsForRange:(id)arg1 ;
-(void)cutForWebView:(id)arg1 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(void)_showLinkSheet;
-(void)setDataListTextSuggestionsInputView:(UIView*<WKFormControl>)arg1 ;
-(id)inputAccessoryView;
-(void)_highlightLongPressRecognized:(id)arg1 ;
-(BOOL)_shouldUseContextMenus;
-(void)endSelectionChange;
-(void)willStartZoomOrScroll;
-(void)_alignRight:(id)arg1 ;
-(NSString *)formInputLabel;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(void)beginSelectionInDirection:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)accessoryOpen;
-(void)beginSelectionChange;
-(void)_shareForWebView:(id)arg1 ;
-(void)_accessibilityClearSelection;
-(long long)selectionGranularity;
-(CGRect)firstRectForRange:(id)arg1 ;
-(void)pasteAndMatchStyle:(id)arg1 ;
-(void)setMarkedText:(id)arg1 ;
-(void)_outdent:(id)arg1 ;
-(void)selectWordBackward;
-(void)toggleItalics:(id)arg1 ;
-(void)startAutoscroll:(CGPoint)arg1 ;
-(id)textInputTraits;
-(void)takeTraitsFrom:(id)arg1 ;
-(void)continueContextMenuInteraction:(/*^block*/id)arg1 ;
-(BOOL)resignFirstResponder;
-(void)setScribbleInteraction:(id)arg1 ;
-(void)_dropInteraction:(id)arg1 delayedPreviewProviderForDroppingItem:(id)arg2 previewProvider:(/*^block*/id)arg3 ;
-(void)_applicationWillResignActive:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(WKDateTimeInputControl *)dateTimeInputControl;
-(void)_transliterateChineseForWebView:(id)arg1 ;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)_indentForWebView:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2 ;
-(void)selectAll:(id)arg1 ;
-(void)_handleKeyUIEvent:(id)arg1 ;
-(id)_scroller;
-(void)scrollSelectionToVisible:(BOOL)arg1 ;
-(BOOL)becomeFirstResponder;
-(void)_setDoubleTapGesturesEnabled:(BOOL)arg1 ;
-(id)textInRange:(id)arg1 ;
-(void)makeTextWritingDirectionNaturalForWebView:(id)arg1 ;
-(BOOL)shouldUseMouseGestureRecognizer;
-(id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(CGPoint)arg2 ;
-(void)setAttributedMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)_cancelInteraction;
-(id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2 ;
-(BOOL)_shouldSimulateKeyboardInputOnTextInsertionInternal;
-(void)changeSelectionWithGestureAt:(CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4 ;
-(void)_pasteAndMatchStyleForWebView:(id)arg1 ;
-(void)deleteBackward;
-(void)insertText:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(void)cancelAutoscroll;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(id)_deferringGestureRecognizers;
-(id)_presentationSnapshotForPreviewItemController:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_lookup:(id)arg1 ;
-(id)_moveToEndOfWord:(BOOL)arg1 withHistory:(id)arg2 ;
-(BOOL)_restoreFocusWithToken:(id)arg1 ;
-(void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2 ;
-(id)cursorInteraction:(id)arg1 styleForRegion:(id)arg2 modifiers:(long long)arg3 ;
-(id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2 ;
-(void)_scrollingNodeScrollingWillBegin;
-(void)_didStartProvisionalLoadForMainFrame;
-(void)_doneDeferringNativeGestures:(BOOL)arg1 ;
-(void)_previewItemControllerDidCancelPreview:(id)arg1 ;
-(void)_resetIsDoubleTapPending;
-(void)_setTextColorForWebView:(id)arg1 sender:(id)arg2 ;
-(void)_showPlaybackTargetPicker:(BOOL)arg1 fromRect:(const IntRect*)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4 ;
-(OptionSet<WebCore::DragSourceAction>)_allowedDragSourceActions;
-(void)tintColorDidChange;
-(WebPageProxy*)page;
-(void)accessoryDone;
-(BOOL)_requiresKeyboardResetOnReload;
-(void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3 ;
-(BOOL)hasContent;
-(id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3 ;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3 ;
-(id)_moveToStartOfDocument:(BOOL)arg1 withHistory:(id)arg2 ;
-(CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(CGRect)arg1 inputViewBounds:(CGRect)arg2 ;
-(void)_contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(CGPoint)arg2 completion:(/*^block*/id)arg3 ;
-(void)_updateTapHighlight;
-(void)_removeContextMenuViewIfPossible;
-(void)_accessibilityStoreSelection;
-(BOOL)_isTextInputContextFocused:(id)arg1 ;
-(BOOL)_mayDisableDoubleTapGesturesDuringSingleTap;
-(void)adjustSelectionWithDelta:(NSRange)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3 ;
-(void)_hideTargetedPreviewContainerViews;
-(id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const InteractionInformationAtPosition*)arg2 ;
-(BOOL)shouldShowAutomaticKeyboardUI;
-(void)selectTextWithGranularity:(long long)arg1 atPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)contextMenuInteraction:(id)arg1 previewForDismissingMenuWithConfiguration:(id)arg2 ;
-(id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2 ;
-(OpaqueWKPageRef)_pageRef;
-(BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2 ;
-(void)_gpuProcessCrashed;
-(void)_previousAccessoryTabForWebView:(id)arg1 ;
-(UIColor *)selectionHighlightColor;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)containerForContextMenuHintPreviews;
-(void)stopRelinquishingFirstResponderToFocusedElement;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)didZoomToScale:(double)arg1 ;
-(BOOL)hasSelection;
-(void)_setAccessibilityWebProcessToken:(id)arg1 ;
-(void)_showTextStyleOptionsForWebView:(id)arg1 ;
-(void)_updateLongPressAndHighlightLongPressGestures;
-(void)_doubleTapRecognizedForDoubleClick:(id)arg1 ;
-(void)_updateInitialWritingDirectionIfNecessary;
-(BOOL)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2 ;
-(void)_finishInteraction;
-(id)undoManager;
-(BOOL)shouldSynthesizeKeyEvents;
-(void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3 ;
-(void)_transpose;
-(void)setUpCursorInteraction;
-(void)updateCurrentFocusedElementInformation:(Function<void (bool)>*)arg1 ;
-(void)_didPerformAction:(SEL)arg1 sender:(id)arg2 ;
-(UIWebFormAccessory *)formAccessoryView;
-(void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2 ;
-(void)_didChangeDragCaretRect:(CGRect)arg1 currentRect:(CGRect)arg2 ;
-(void)cleanUpDragSourceSessionState;
-(void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3 ;
-(void)mouseGestureRecognizerChanged:(id)arg1 ;
-(long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2 ;
-(void)_hideKeyboard;
-(const FocusedElementInformation*)focusedElementInformation;
-(void)_decreaseListLevelForWebView:(id)arg1 ;
-(void)_didCommitLayerTree:(const RemoteLayerTreeTransaction*)arg1 ;
-(void)_webTouchEvent:(const NativeWebTouchEvent*)arg1 preventsNativeGestures:(BOOL)arg2 ;
-(void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1 ;
-(NSArray *)dataListTextSuggestions;
-(double)timePickerValueHour;
-(void)dropInteraction:(id)arg1 concludeDrop:(id)arg2 ;
-(id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2 ;
-(unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1 ;
-(void)insertUnorderedListForWebView:(id)arg1 ;
-(void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2 ;
-(void)_pasteAsQuotation:(id)arg1 ;
-(void)_requestDOMPasteAccessWithElementRect:(const IntRect*)arg1 originIdentifier:(const String*)arg2 completionHandler:(CompletionHandler<void (WebCore::DOMPasteAccessResponse)>*)arg3 ;
-(unsigned short)characterBeforeCaretSelection;
-(void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1 ;
-(BOOL)dropInteraction:(id)arg1 canHandleSession:(id)arg2 ;
-(id)inputAssistantItem;
-(void)alignCenterForWebView:(id)arg1 ;
-(UIView*<WKFormControl>)dataListTextSuggestionsInputView;
-(void)_changeListTypeForWebView:(id)arg1 ;
-(void)pasteWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_alignJustifiedForWebView:(id)arg1 ;
-(void)setDataListTextSuggestions:(NSArray *)arg1 ;
-(id)selectedTextForActionSheetAssistant:(id)arg1 ;
-(CGRect)textLastRect;
-(UITextPosition *)beginningOfDocument;
-(void)_didChangeLinkPreviewAvailability;
-(BOOL)preventsPanningInXAxis;
-(void)_alignLeft:(id)arg1 ;
-(void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 ;
-(void)_deleteByWord;
-(void)executeEditCommandWithCallback:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2 ;
-(BOOL)_disableAutomaticKeyboardUI;
-(void)_define:(id)arg1 ;
-(void)shareSheet:(id)arg1 willShowActivityItems:(id)arg2 ;
-(void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3 ;
-(BOOL)gestureRecognizerMayPanWebView:(id)arg1 ;
-(void)outdentForWebView:(id)arg1 ;
-(void)doAfterPositionInformationUpdate:(/*^block*/id)arg1 forRequest:(InteractionInformationRequest)arg2 ;
-(BOOL)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(CGPoint)arg2 ;
-(void)_share:(id)arg1 ;
-(void)_singleTapIdentified:(id)arg1 ;
-(void)_willPerformAction:(SEL)arg1 sender:(id)arg2 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)_hardwareKeyboardAvailabilityChanged;
-(BOOL)_hasFocusedElement;
-(void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;
-(void)cleanupScribbleInteraction;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1 ;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(SEL)_actionForLongPress;
-(double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3 ;
-(BOOL)_shouldToggleSelectionCommandsAfterTapAt:(CGPoint)arg1 ;
-(void)_pasteAsQuotationForWebView:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldIgnoreWebTouchWithEvent:(id)arg2 ;
-(void)_alignLeftForWebView:(id)arg1 ;
-(void)_didFinishTextInteractionInTextInputContext:(id)arg1 ;
-(BOOL)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2 ;
-(CGRect)unoccludedWindowBoundsForActionSheetAssistant:(id)arg1 ;
-(void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2 ;
-(void)_preserveFocusWithToken:(id)arg1 destructively:(BOOL)arg2 ;
-(CGPoint)lastInteractionLocation;
-(void)dropInteraction:(id)arg1 performDrop:(id)arg2 ;
-(BOOL)_shouldShowAutomaticKeyboardUIIgnoringInputMode;
-(id)_commonInitializationWithProcessPool:(WebProcessPool*)arg1 configuration:(Ref<API::PageConfiguration, WTF::DumbPtrTraits<API::PageConfiguration> >*)arg2 ;
-(void)changeSelectionWithGestureAt:(CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 ;
-(RetainPtr<NSArray>*)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr<NSArray>*)arg3 ;
-(void)changeSelectionWithTouchesFrom:(CGPoint)arg1 to:(CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4 ;
-(void)toggleUnderlineForWebView:(id)arg1 ;
-(void)_pasteAndMatchStyle:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3 ;
-(NSRange)_markedTextNSRange;
-(FloatRect)_scaledCaretRectForSelectionStart:(FloatRect)arg1 ;
-(void)_deleteToEndOfParagraph;
-(void)_didUpdateInputMode:(unsigned char)arg1 ;
-(BOOL)shouldIgnoreKeyboardWillHideNotification;
-(void)startRelinquishingFirstResponderToFocusedElement;
-(void)_hideInspectorHighlight;
-(void)_insertUnorderedList:(id)arg1 ;
-(void)actionSheetAssistant:(id)arg1 openElementAtLocation:(CGPoint)arg2 ;
-(id)_createTargetedContextMenuHintPreviewIfPossible;
-(BOOL)becomeFirstResponderForWebView;
-(void)_transliterateChinese:(id)arg1 ;
-(id)inputView;
-(void)_updateChangedSelection;
-(void)_willBeginTextInteractionInTextInputContext:(id)arg1 ;
-(BOOL)fileUploadPanelDestinationIsManaged:(id)arg1 ;
-(CGRect)indirectScribbleInteraction:(id)arg1 frameForElement:(id)arg2 ;
-(id)initWithFrame:(CGRect)arg1 processPool:(NakedRef<WebKit::WebProcessPool>*)arg2 configuration:(Ref<API::PageConfiguration, WTF::DumbPtrTraits<API::PageConfiguration> >*)arg3 webView:(id)arg4 ;
-(id)_cascadeInteractionTintColor;
-(void)_didChangeDragInteractionPolicy;
-(id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3 ;
-(BOOL)_elementForTextInputContextIsFocused:(id)arg1 ;
-(UITextInputAssistantItem *)inputAssistantItemForWebView;
-(void)_doubleTapRecognized:(id)arg1 ;
-(void)_increaseListLevelForWebView:(id)arg1 ;
-(BOOL)ensurePositionInformationIsUpToDate:(InteractionInformationRequest)arg1 ;
-(void)updateFixedClippingView:(FloatRect)arg1 ;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(void)_stylusSingleTapRecognized:(id)arg1 ;
-(BOOL)deferringGestureRecognizer:(id)arg1 shouldDeferGesturesAfterEndingTouchesWithEvent:(id)arg2 ;
-(id)_autofillContext;
-(BOOL)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3 ;
-(void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(CGRect)arg3 ;
-(void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;
-(void)_unregisterPreview;
-(id)_moveToEndOfParagraph:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)currentDragOrDropSession;
-(void)moveForward:(unsigned)arg1 ;
-(BOOL)_currentPositionInformationIsValidForRequest:(const InteractionInformationRequest*)arg1 ;
-(BOOL)_waitForDrawToPDFCallback;
-(BOOL)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2 ;
-(BOOL)shouldAllowHidingSelectionCommands;
-(void)selectWordForReplacement;
-(void)_showImageSheet;
-(void)_processDidCreateContextForVisibilityPropagation;
-(Optional<WebKit::InteractionInformationAtPosition>*)positionInformationForActionSheetAssistant:(id)arg1 ;
-(id)_itemsForBeginningOrAddingToSessionWithRegistrationLists:(id)arg1 stagedDragSource:(const DragSourceState*)arg2 ;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(void)cancelActiveTextInteractionGestures;
-(void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3 ;
-(void)_gpuProcessDidCreateContextForVisibilityPropagation;
-(double)_initialScaleFactor;
-(BOOL)_handleDOMPasteRequestWithResult:(unsigned char)arg1 ;
-(id)fontForCaretSelection;
-(void)_cancelPendingAutocorrectionContextHandler;
-(id<UITextInputTokenizer>)tokenizer;
-(void)_didScroll;
-(BOOL)_shouldSimulateKeyboardInputOnTextInsertion;
-(void)indirectScribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2 ;
-(void)_longPressRecognized:(id)arg1 ;
-(WKBrowsingContextController *)browsingContextController;
-(void)fileUploadPanelDidDismiss:(id)arg1 ;
-(BOOL)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1 ;
-(void)_twoFingerSingleTapGestureRecognized:(id)arg1 ;
-(void)_selectPositionAtPoint:(CGPoint)arg1 stayingWithinFocusedElement:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)_requiresKeyboardWhenFirstResponder;
-(void)removeTextPlaceholder:(id)arg1 willInsertText:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_presentationRectsForPreviewItemController:(id)arg1 ;
-(id)_dataForPreviewItemController:(id)arg1 atPosition:(CGPoint)arg2 type:(long long*)arg3 ;
-(void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_zoomOutWithOrigin:(CGPoint)arg1 ;
-(double)timePickerValueMinute;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)indirectScribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2 ;
-(void)_disableDoubleTapGesturesDuringTapIfNecessary:(unsigned long long)arg1 ;
-(void)_startDrag:(RetainPtr<CGImage *>*)arg1 item:(const DragItem*)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 ;
-(void)reloadContextViewForPresentedListViewController;
-(void)replaceDictatedText:(id)arg1 withText:(id)arg2 ;
-(void)setBottomBufferHeight:(double)arg1 ;
-(void)_simulateLongPressActionAtLocation:(CGPoint)arg1 ;
-(void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(CGPoint)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)updateFocusedElementValueAsNumber:(double)arg1 ;
-(void)accessoryTab:(BOOL)arg1 ;
-(void)alignRightForWebView:(id)arg1 ;
-(BOOL)hasMarkedText;
-(id)metadataDictionariesForDictationResults;
-(void)_alignCenter:(id)arg1 ;
-(unsigned long long)_dragDestinationActionForDropSession:(id)arg1 ;
-(BOOL)_dragInteraction:(id)arg1 item:(id)arg2 shouldDelaySetDownAnimationWithCompletion:(/*^block*/id)arg3 ;
-(void)_zoomToFocusRect:(CGRect)arg1 selectionRect:(CGRect)arg2 insideFixed:(BOOL)arg3 fontSize:(float)arg4 minimumScale:(double)arg5 maximumScale:(double)arg6 allowScaling:(BOOL)arg7 forceScroll:(BOOL)arg8 ;
-(id)containerForDragPreviews;
-(void)actionSheetAssistant:(id)arg1 performAction:(BOOL)arg2 ;
-(void)cleanUpInteraction;
-(CGRect)rectForNSRange:(NSRange)arg1 ;
-(void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2 ;
-(void)_insertNestedUnorderedList:(id)arg1 ;
-(void)_showDataDetectorsUIForPositionInformation:(const InteractionInformationAtPosition*)arg1 ;
-(void)_didCommitLoadForMainFrame;
-(void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(BOOL)arg3 ;
-(void)_focusTextInputContext:(id)arg1 placeCaretAt:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_singleTapRecognized:(id)arg1 ;
-(void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_didRelaunchProcess;
-(void)_toggleStrikeThroughForWebView:(id)arg1 ;
-(BOOL)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(CGPoint)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2 ;
-(CGRect)rectContainingCaretSelection;
-(void)updateSelectionWithExtentPoint:(CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)automaticallySelectedOverlay;
-(CGRect)_presentationRectForPreviewItemController:(id)arg1 ;
-(id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2 ;
-(BOOL)isResigningFirstResponder;
-(id)_presentedViewControllerForPreviewItemController:(id)arg1 ;
-(void)_deliverDelayedDropPreviewIfPossible:(Optional<WebCore::TextIndicatorData>*)arg1 ;
-(void)didMoveToWindow;
-(void)_cancelPreviousResetInputViewDeferralRequest;
-(BOOL)_interpretKeyEvent:(id)arg1 isCharEvent:(BOOL)arg2 ;
-(void)toggleStrikeThroughForWebView:(id)arg1 ;
-(id)wordRangeContainingCaretSelection;
-(void)_didReceiveEditDragSnapshot:(Optional<WebCore::TextIndicatorData>*)arg1 ;
-(void)selectPositionAtPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_setFontForWebView:(id)arg1 sender:(id)arg2 ;
-(void)_wheelChangedWithEvent:(id)arg1 ;
-(void)_addDefaultGestureRecognizers;
-(void)_doubleTapDidFail:(id)arg1 ;
-(void)_doAfterResettingSingleTapGesture:(/*^block*/id)arg1 ;
-(void)_promptForReplaceForWebView:(id)arg1 ;
-(unsigned)_characterInRelationToCaretSelection:(int)arg1 ;
-(void)_updateForScreen:(id)arg1 ;
-(BOOL)deferringGestureRecognizer:(id)arg1 shouldDeferGesturesAfterBeginningTouchesWithEvent:(id)arg2 ;
-(long long)interfaceOrientation;
-(void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)arg1 ;
-(void)assignLegacyDataForContextMenuInteraction;
-(void)insertOrderedListForWebView:(id)arg1 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(void)insertNestedUnorderedListForWebView:(id)arg1 ;
-(BOOL)sizeChangedSinceLastVisibleContentRectUpdate;
-(void)continueContextMenuInteractionWithDataDetectors:(/*^block*/id)arg1 ;
-(void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_indent:(id)arg1 ;
-(void)requestAsynchronousPositionInformationUpdate:(InteractionInformationRequest)arg1 ;
-(BOOL)_scrollToRect:(CGRect)arg1 withOrigin:(CGPoint)arg2 minimumScrollDistance:(double)arg3 ;
-(void)_zoomToRevealFocusedElement;
-(void)_writePromisedAttachmentToPasteboard:(PromisedAttachmentInfo*)arg1 ;
-(const WKAutoCorrectionData*)autocorrectionData;
-(void)_requestTextInputContextsInRect:(CGRect)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_nextAccessoryTabForWebView:(id)arg1 ;
-(void)selectPositionAtPoint:(CGPoint)arg1 withContextRequest:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)webSelectionRects;
-(void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;
-(BOOL)_handleDropByInsertingImagePlaceholders:(id)arg1 session:(id)arg2 ;
-(BOOL)isReplaceAllowed;
-(void)selectAllForWebView:(id)arg1 ;
-(void)accessibilityRetrieveSpeakSelectionContent;
-(void)shareSheetDidDismiss:(id)arg1 ;
-(void)makeTextWritingDirectionNatural:(id)arg1 ;
-(void)_decreaseListLevel:(id)arg1 ;
-(void)_didHandleAdditionalDragItemsRequest:(BOOL)arg1 ;
-(void)_updateRemoteAccessibilityRegistration:(BOOL)arg1 ;
-(void)requestAutocorrectionContextWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)updateFocusedElementValue:(id)arg1 ;
-(id)_moveToStartOfWord:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(id)_uiTextSelectionRects;
-(void)_screenCapturedDidChange:(id)arg1 ;
-(void)didInterruptScrolling;
-(id)containerForDropPreviews;
-(void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2 ;
-(id)_moveDown:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_didNotHandleTapAsClick:(const IntPoint*)arg1 ;
-(void)_setupVisibilityPropagationViewForGPUProcess;
-(BOOL)shouldSuppressUpdateCandidateView;
-(void)willMoveToWindow:(id)arg1 ;
-(void)_didCompleteSyntheticClick;
-(void)_updateInputContextAfterBlurringAndRefocusingElement;
-(void)changeSelectionWithTouchAt:(CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(BOOL)arg3 withFlags:(long long)arg4 ;
-(void)_didGetTapHighlightForRequest:(unsigned long long)arg1 color:(const Color*)arg2 quads:(const Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg3 topLeftRadius:(const IntSize*)arg4 topRightRadius:(const IntSize*)arg5 bottomLeftRadius:(const IntSize*)arg6 bottomRightRadius:(const IntSize*)arg7 nodeHasBuiltInClickHandling:(BOOL)arg8 ;
-(void)replaceForWebView:(id)arg1 ;
-(void)_prepareToDragPromisedAttachment:(const PromisedAttachmentInfo*)arg1 ;
-(void)_didHandleDragStartRequest:(BOOL)arg1 ;
-(BOOL)indirectScribbleInteraction:(id)arg1 isElementFocused:(id)arg2 ;
-(void)_interactionStartedFromPreviewItemController:(id)arg1 ;
-(id)_contentsOfUserInterfaceItem:(id)arg1 ;
-(SEL)_actionForLongPressFromPositionInformation:(const InteractionInformationAtPosition*)arg1 ;
-(void)_twoFingerDoubleTapRecognized:(id)arg1 ;
-(void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)_commitPotentialTapFailed;
-(void)_enableInspectorNodeSearch;
-(void)cleanUpAdditionalInteractions;
-(void)_updateChangedSelection:(BOOL)arg1 ;
-(void)_keyboardDidRequestDismissal:(id)arg1 ;
-(void)_insertOrderedList:(id)arg1 ;
-(void)pasteAndMatchStyleForWebView:(id)arg1 ;
-(void)_updateInteractionTintColor;
-(void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3 ;
-(void)replace:(id)arg1 ;
-(BOOL)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3 ;
-(id)_moveToEndOfDocument:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_cursorInteraction:(id)arg1 regionForLocation:(CGPoint)arg2 defaultRegion:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2 ;
-(void)_willReceiveEditDragSnapshot;
-(void)cancelPointersForGestureRecognizer:(id)arg1 ;
-(BOOL)isFocusingElement;
-(BOOL)isShowingInspectorIndication;
-(void)_changeListType:(id)arg1 ;
-(void)insertTextPlaceholderWithSize:(CGSize)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)scrollViewWillStartPanOrPinchGesture;
-(CGRect)unobscuredContentRect;
-(id)_moveUp:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_inspectorNodeSearchRecognized:(id)arg1 ;
-(void)clearSelection;
-(BOOL)isScrollableForKeyboardScrollViewAnimator:(id)arg1 ;
-(void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1 ;
-(void)_processDidExit;
-(void)_didEndScrollingOrZooming;
-(void)_showKeyboard;
-(void)_willStartScrollingOrZooming;
-(id)markedText;
-(BOOL)canShowNonEmptySelectionView;
-(id)textEffectsWindow;
-(void)requestDictationContext:(/*^block*/id)arg1 ;
-(void)setUpAdditionalInteractions;
-(BOOL)_pointIsInsideSelectionRect:(CGPoint)arg1 outBoundingRect:(FloatRect*)arg2 ;
-(void)_webTouchEventsRecognized:(id)arg1 ;
-(FloatRect)_scaledCaretRectForSelectionEnd:(FloatRect)arg1 ;
-(void)indentForWebView:(id)arg1 ;
-(BOOL)hasHiddenContentEditable;
-(void)toggleBoldface:(id)arg1 ;
-(void)_accessibilityRegisterUIProcessTokens;
-(void)_lookupForWebView:(id)arg1 ;
-(UIView *)inputViewForWebView;
-(void)_deleteForwardByWord;
-(void)_becomeFirstResponderWithSelectionMovingForward:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_dataDetectionResults;
-(Optional<unsigned int>)activeTouchIdentifierForGestureRecognizer:(id)arg1 ;
-(void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2 ;
-(double)_targetContentZoomScaleForRect:(const FloatRect*)arg1 currentScale:(double)arg2 fitEntireRect:(BOOL)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 ;
-(id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2 ;
-(id)alternativesForSelectedText;
-(void)setContinuousSpellCheckingEnabled:(BOOL)arg1 ;
-(void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2 ;
-(void)_disableInspectorNodeSearch;
-(void)_resetPanningPreventionFlags;
-(void)_outdentForWebView:(id)arg1 ;
-(void)generateSyntheticEditingCommand:(unsigned char)arg1 ;
-(void)_handleAutocorrectionContext:(const WebAutocorrectionContext*)arg1 ;
-(BOOL)_shouldUseLegacySelectPopoverDismissalBehavior;
-(void)_createAndConfigureLongPressGestureRecognizer;
-(id)_moveLeft:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_alignJustified:(id)arg1 ;
-(void)insertNestedOrderedListForWebView:(id)arg1 ;
-(void)setUpTextSelectionAssistant;
-(CGRect)textFirstRect;
-(void)_insertNestedOrderedList:(id)arg1 ;
-(id)_formInputSession;
-(void)_didPerformDragOperation:(BOOL)arg1 ;
-(void)selectFormAccessoryPickerRow:(long long)arg1 ;
-(void)_didHideMenu:(id)arg1 ;
-(void)_previewItemController:(id)arg1 commitPreview:(id)arg2 ;
-(void)_alignRightForWebView:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(void)_createAndConfigureDoubleTapGestureRecognizer;
-(BOOL)_shouldAvoidScrollingWhenFocusedContentIsVisible;
-(void)computeClientAndGlobalPointsForDropSession:(id)arg1 outClientPoint:(CGPoint*)arg2 outGlobalPoint:(CGPoint*)arg3 ;
-(void)_removeVisibilityPropagationView;
-(void)_showRunOpenPanel:(OpenPanelParametersRef)arg1 frameInfo:(const FrameInfoData*)arg2 resultListener:(WebOpenPanelResultListenerProxyRef)arg3 ;
-(BOOL)_allowAnimatedUpdateSelectionRectViews;
-(id)webViewUIDelegate;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(id)inputLabelText;
-(BOOL)pointIsNearMarkedText:(CGPoint)arg1 ;
-(void)_showShareSheet:(const ShareDataWithParsedURL*)arg1 inRect:(Optional<WebCore::FloatRect>)arg2 completionHandler:(CompletionHandler<void (bool)>*)arg3 ;
-(void)_alignCenterForWebView:(id)arg1 ;
-(void)_simulateElementAction:(long long)arg1 atLocation:(CGPoint)arg2 ;
-(void)didUpdateVisibleRect:(CGRect)arg1 unobscuredRect:(CGRect)arg2 contentInsets:(UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(CGRect)arg4 obscuredInsets:(UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(UIEdgeInsets)arg6 inputViewBounds:(CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 inStableState:(BOOL)arg10 isChangingObscuredInsetsInteractively:(BOOL)arg11 enclosedInScrollableAncestorView:(BOOL)arg12 sendEvenIfUnchanged:(BOOL)arg13 ;
-(BOOL)resignFirstResponderForWebView;
-(void)_restoreCalloutBarIfNeeded;
-(void)_doAfterReceivingEditDragSnapshotForTesting:(/*^block*/id)arg1 ;
-(void)moveBackward:(unsigned)arg1 ;
-(void)selectForWebView:(id)arg1 ;
-(void)_insertNestedUnorderedListForWebView:(id)arg1 ;
-(id)cursorRegionForPositionInformation:(InteractionInformationAtPosition*)arg1 point:(CGPoint)arg2 ;
-(void)_cancelPendingKeyEventHandler;
-(BOOL)hasSelectablePositionAtPoint:(CGPoint)arg1 ;
-(void)increaseSizeForWebView:(id)arg1 ;
-(void)_nextAccessoryTab:(id)arg1 ;
-(void)_removeDefaultGestureRecognizers;
-(const InteractionInformationAtPosition*)positionInformation;
-(BOOL)_hasValidOutstandingPositionInformationRequest:(const InteractionInformationRequest*)arg1 ;
-(void)_layerTreeCommitComplete;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(void)copyForWebView:(id)arg1 ;
-(void)_setupVisibilityPropagationView;
-(RetainPtr<UIView>*)_createPreviewContainerWithLayerName:(id)arg1 ;
-(BOOL)isAnyTouchOverActiveArea:(id)arg1 ;
-(BOOL)_currentPositionInformationIsApproximatelyValidForRequest:(const InteractionInformationRequest*)arg1 radiusForApproximation:(int)arg2 ;
-(id)selectionInteractionAssistant;
-(void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2 ;
-(void)_showDictionary:(id)arg1 ;
-(void)_showDataDetectorsUI;
-(void)_attemptSyntheticClickAtLocation:(CGPoint)arg1 modifierFlags:(long long)arg2 ;
-(id)supportedPasteboardTypesForCurrentSelection;
-(id)_moveToEndOfLine:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_insertNestedOrderedListForWebView:(id)arg1 ;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(id)wordContainingCaretSelection;
-(void)_cancelTouchEventGestureRecognizer;
-(void)_zoomToInitialScaleWithOrigin:(CGPoint)arg1 ;
-(id)_textInputContextByScribbleIdentifier:(id)arg1 ;
-(void)accessoryAutoFill;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_registerPreview;
-(id)selectedDOMRange;
-(void)_defineForWebView:(id)arg1 ;
-(BOOL)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2 ;
-(void)_promptForReplace:(id)arg1 ;
-(void)_didExitStableState;
-(id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3 ;
-(void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)teardownDragAndDropInteractions;
-(void)_interactionStoppedFromPreviewItemController:(id)arg1 ;
-(void)_dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(CGPoint)arg3 completion:(/*^block*/id)arg4 ;
-(void)alignLeftForWebView:(id)arg1 ;
-(void)_positionInformationDidChange:(const InteractionInformationAtPosition*)arg1 ;
-(void)_handleTouchActionsForTouchEvent:(const NativeWebTouchEvent*)arg1 ;
-(NSString *)textContentTypeForTesting;
-(void)_invokePendingAutocorrectionContextHandler:(id)arg1 ;
-(void)_cancelLongPressGestureRecognizer;
-(BOOL)_zoomToRect:(CGRect)arg1 withOrigin:(CGPoint)arg2 fitEntireRect:(BOOL)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6 ;
-(id)touchActionActiveTouches;
-(void)_elementDidFocus:(const FocusedElementInformation*)arg1 userIsInteracting:(BOOL)arg2 blurPreviousNode:(BOOL)arg3 activityStateChanges:(OptionSet<WebCore::ActivityState::Flag>)arg4 userObject:(id)arg5 ;
-(unique_ptr<WebKit::DrawingAreaProxy, std::__1::default_delete<WebKit::DrawingAreaProxy> >*)_createDrawingAreaProxy:(WebProcessProxy*)arg1 ;
-(void)indirectScribbleInteraction:(id)arg1 focusElementIfNeeded:(id)arg2 referencePoint:(CGPoint)arg3 completion:(/*^block*/id)arg4 ;
-(void)_increaseListLevel:(id)arg1 ;
-(void)setUpDragAndDropInteractions;
-(void)_setAcceleratedCompositingRootView:(id)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(id)_moveRight:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(Color*)_tapHighlightColorForFastClick:(BOOL)arg1 ;
-(void)_updateSelectionAssistantSuppressionState;
-(id)textColorForCaretSelection;
-(BOOL)_shouldAvoidResizingWhenInputViewBoundsChange;
-(void)_removeVisibilityPropagationViewForGPUProcess;
-(void)_previousAccessoryTab:(id)arg1 ;
-(void)_insertOrderedListForWebView:(id)arg1 ;
-(void)_insertUnorderedListForWebView:(id)arg1 ;
-(void)setSizeChangedSinceLastVisibleContentRectUpdate:(BOOL)arg1 ;
-(CGRect)_selectionClipRect;
-(void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)alignJustifiedForWebView:(id)arg1 ;
-(void)updatePositionInformationForActionSheetAssistant:(id)arg1 ;
-(void)_handleSmartMagnificationInformationForPotentialTap:(unsigned long long)arg1 renderRect:(const FloatRect*)arg2 fitEntireRect:(BOOL)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(BOOL)arg6 ;
-(void)dragInteraction:(id)arg1 sessionDidTransferItems:(id)arg2 ;
-(BOOL)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2 ;
-(CGPDFDocumentRef)_wk_printedDocument;
-(void)keyboardScrollViewAnimatorWillScroll:(id)arg1 ;
-(void)setUpMouseGestureRecognizer;
-(BOOL)supportsTextSelectionWithCharacterGranularity;
-(void)_simulateTextEntered:(id)arg1 ;
-(void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(CGRect)arg3 ;
-(BOOL)canBecomeFirstResponderForWebView;
-(unsigned)_characterBeforeCaretSelection;
-(BOOL)preventsPanningInYAxis;
-(void)indirectScribbleInteraction:(id)arg1 requestElementsInRect:(CGRect)arg2 completion:(/*^block*/id)arg3 ;
-(void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1 ;
-(void)_didChangeWebViewEditability;
-(void)_addShortcutForWebView:(id)arg1 ;
-(id)targetForAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1 ;
-(void)select:(id)arg1 ;
-(void)dealloc;
-(void)_resetInputViewDeferral;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)_showAttachmentSheet;
-(BOOL)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2 ;
-(void)_didUpdateEditorState;
-(void)_deleteToStartOfLine;
-(id)_moveToStartOfLine:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)dismissFilePicker;
-(void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_scrollingNodeScrollingDidEnd;
-(void)_setMarkedText:(id)arg1 highlights:(const Vector<WebCore::CompositionHighlight, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg2 selectedRange:(NSRange)arg3 ;
-(id)webSelectionRectsForSelectionRects:(const Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg1 ;
-(id)dataDetectionContextForPositionInformation:(const InteractionInformationAtPosition*)arg1 ;
-(void)decreaseSizeForWebView:(id)arg1 ;
-(BOOL)_shouldSuppressSelectionCommands;
-(Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)focusedSelectElementOptions;
@end

